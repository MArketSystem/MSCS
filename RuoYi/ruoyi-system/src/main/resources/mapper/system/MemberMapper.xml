<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.MemberMapper">
    
    <resultMap type="Member" id="MemberResult">
        <result property="memberId"    column="member_id"    />
        <result property="memberNo"    column="member_no"    />
        <result property="memberName"    column="member_name"    />
        <result property="memberNum"    column="member_num"    />
        <result property="memberScore"    column="member_score"    />
        <result property="memberInfo"    column="member_info"    />
    </resultMap>

    <sql id="selectMemberVo">
        select member_id, member_no, member_name, member_num, member_score, member_info from member
    </sql>

    <select id="selectMemberList" parameterType="Member" resultMap="MemberResult">
        <include refid="selectMemberVo"/>
        <where>  
            <if test="memberNo != null  and memberNo != ''"> and member_no = #{memberNo}</if>
            <if test="memberName != null  and memberName != ''"> and member_name like concat('%', #{memberName}, '%')</if>
            <if test="memberNum != null  and memberNum != ''"> and member_num = #{memberNum}</if>
            <if test="memberScore != null "> and member_score = #{memberScore}</if>
            <if test="memberInfo != null  and memberInfo != ''"> and member_info = #{memberInfo}</if>
        </where>
    </select>
    
    <select id="selectMemberById" parameterType="Long" resultMap="MemberResult">
        <include refid="selectMemberVo"/>
        where member_id = #{memberId}
    </select>
        
    <insert id="insertMember" parameterType="Member" useGeneratedKeys="true" keyProperty="memberId">
        insert into member
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="memberNo != null and memberNo != ''">member_no,</if>
            <if test="memberName != null and memberName != ''">member_name,</if>
            <if test="memberNum != null and memberNum != ''">member_num,</if>
            <if test="memberScore != null">member_score,</if>
            <if test="memberInfo != null">member_info,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="memberNo != null and memberNo != ''">#{memberNo},</if>
            <if test="memberName != null and memberName != ''">#{memberName},</if>
            <if test="memberNum != null and memberNum != ''">#{memberNum},</if>
            <if test="memberScore != null">#{memberScore},</if>
            <if test="memberInfo != null">#{memberInfo},</if>
         </trim>
    </insert>

    <update id="updateMember" parameterType="Member">
        update member
        <trim prefix="SET" suffixOverrides=",">
            <if test="memberNo != null and memberNo != ''">member_no = #{memberNo},</if>
            <if test="memberName != null and memberName != ''">member_name = #{memberName},</if>
            <if test="memberNum != null and memberNum != ''">member_num = #{memberNum},</if>
            <if test="memberScore != null">member_score = #{memberScore},</if>
            <if test="memberInfo != null">member_info = #{memberInfo},</if>
        </trim>
        where member_id = #{memberId}
    </update>

    <delete id="deleteMemberById" parameterType="Long">
        delete from member where member_id = #{memberId}
    </delete>

    <delete id="deleteMemberByIds" parameterType="String">
        delete from member where member_id in 
        <foreach item="memberId" collection="array" open="(" separator="," close=")">
            #{memberId}
        </foreach>
    </delete>

</mapper>